akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  # Log at info level when messages are sent to dead letters.
  # Possible values:
  # on: all dead letters are logged
  # off: no logging of dead letters
  # n: positive integer, number of dead letters that will be logged
  log-dead-letters = off

  # Possibility to turn off logging of dead letters while the actor system
  # is shutting down. Logging is only done when enabled by 'log-dead-letters'
  # setting.
  log-dead-letters-during-shutdown = on

  actor {
    # provider=remote is possible, but prefer cluster
    provider = remote

    serializers {
      kryo = "io.openjob.common.kryo.KryoSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = kryo
    }

    heartbeat-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 4
      }
      throughput = 10
    }

    persistent-routing-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 16
      }
      throughput = 10
    }

    task-master-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 16
      }
      throughput = 10
    }

    task-container-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        core-pool-size-min = 2
        fixed-pool-size = 6
      }
      throughput = 10
    }

    delay-master-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        core-pool-size-min = 2
        fixed-pool-size = 6
      }
      throughput = 10
    }
  }
  remote {
    artery {
      transport = tcp # See Selecting a transport below
      canonical.hostname = "127.0.0.1"
      canonical.port = 25521

      # https://github.com/akka/akka/issues/22088
      # https://github.com/akka/akka/blob/v2.5.32/akka-remote/src/main/resources/reference.conf#L2-L276
      advanced {
          # Maximum serialized message size, including header data.
          maximum-frame-size = 64 MiB

          # Maximum serialized message size for the large messages, including header data.
          # It is currently restricted to 1/8th the size of a term buffer that can be
          # configured by setting the 'aeron.term.buffer.length' system property.
          # See 'large-message-destinations'.
          maximum-large-frame-size = 64 MiB
      }
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "target/example/journal"

      # Set the maximum number of re-tries allowed before persisting the event
      leveldb.max-retries = 3
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/example/snapshots"
    }

    mailbox {
        default {
          dead-letters-queue-size = 1
        }
    }
  }
}